<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murphy.mapper.PricePeopleMapper">
    <resultMap id="BaseResultMap" type="com.murphy.pojo.PricePeople">
        <result column="charP_id" jdbcType="INTEGER" property="charP_id"/>
        <result column="beH_id" jdbcType="INTEGER" property="beH_id"/>
        <result column="checkTime" jdbcType="TIMESTAMP" property="checkTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        charP_id, beH_id, checkTime
    </sql>
    <select id="selectByExample" parameterType="com.murphy.pojo.PricePeopleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from hosp_pricePeople
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.murphy.pojo.PricePeopleExample">
        delete from hosp_pricePeople
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.murphy.pojo.PricePeople">
        insert into hosp_pricePeople (charP_id, beH_id, checkTime)
        values (#{charP_id,jdbcType=INTEGER}, #{beH_id,jdbcType=INTEGER}, #{checkTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.murphy.pojo.PricePeople">
        insert into hosp_pricePeople
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="charP_id != null">
                charP_id,
            </if>
            <if test="beH_id != null">
                beH_id,
            </if>
            <if test="checkTime != null">
                checkTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="charP_id != null">
                #{charP_id,jdbcType=INTEGER},
            </if>
            <if test="beH_id != null">
                #{beH_id,jdbcType=INTEGER},
            </if>
            <if test="checkTime != null">
                #{checkTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.murphy.pojo.PricePeopleExample" resultType="java.lang.Long">
        select count(*) from hosp_pricePeople
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update hosp_pricePeople
        <set>
            <if test="record.charP_id != null">
                charP_id = #{record.charP_id,jdbcType=INTEGER},
            </if>
            <if test="record.beH_id != null">
                beH_id = #{record.beH_id,jdbcType=INTEGER},
            </if>
            <if test="record.checkTime != null">
                checkTime = #{record.checkTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update hosp_pricePeople
        set charP_id = #{record.charP_id,jdbcType=INTEGER},
        beH_id = #{record.beH_id,jdbcType=INTEGER},
        checkTime = #{record.checkTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <select id="selectByBeH_id" resultMap="baseMap">
        select price.beH_id, re.re_name, beH.beH_createTime, beH.beH_closePrice, price.charP_id, charP.charP_name, charP_money, price.checkTime
        from SSM_Hosp.hosp_pricePeople price
        inner join SSM_Hosp.hosp_beHosp beH on price.beH_id = beH.beH_id
        inner join SSM_Hosp.hosp_register re on beH.beH_id = re.re_id
        inner join SSM_Hosp.hosp_chargeProj charP on charP.charP_id = price.charP_id
        where price.beH_id = #{beH_id}
    </select>

    <select id="queryByVo" parameterType="com.murphy.vo.query.QueryPricePeopleVo" resultMap="baseMap">
        select beH.beH_id, re.re_name, beH.beH_createTime, beH.beH_closePrice, beH.beH_state
        from SSM_Hosp.hosp_beHosp beH
        inner join SSM_Hosp.hosp_register re on beH.beH_id = re.re_id
        <where>
            <if test="beH_id != null">beH_id = #{beH_id}</if>
            <if test="re_name != null">and re_name like concat(concat('%',#{re_name},'%'))</if>
        </where>
    </select>

    <resultMap id="baseMap" type="com.murphy.pojo.PricePeople" extends="BaseResultMap">
        <result column="re_name" property="register.re_name"/>
        <result column="beH_createTime" property="beHosp.beH_createTime"/>
        <result column="beH_closePrice" property="beHosp.beH_closePrice"/>
        <result column="beH_state" property="beHosp.beH_state"/>
        <result column="charP_name" property="chargeProj.charP_name"/>
        <result column="charP_money" property="chargeProj.charP_money"/>
    </resultMap>
</mapper>