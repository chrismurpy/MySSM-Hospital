<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murphy.mapper.ChargeProjMapper">
    <resultMap id="BaseResultMap" type="com.murphy.pojo.ChargeProj">
        <id column="charP_id" jdbcType="INTEGER" property="charP_id"/>
        <result column="charP_name" jdbcType="VARCHAR" property="charP_name"/>
        <result column="charP_money" jdbcType="DECIMAL" property="charP_money"/>
        <result column="charP_createTime" jdbcType="TIMESTAMP" property="charP_createTime"/>
        <result column="charP_state" jdbcType="INTEGER" property="charP_state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        charP_id, charP_name, charP_money, charP_createTime, charP_state
    </sql>
    <select id="selectByExample" parameterType="com.murphy.pojo.ChargeProjExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from hosp_chargeProj
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from hosp_chargeProj
        where charP_id = #{charP_id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from hosp_chargeProj
        where charP_id = #{charP_id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.murphy.pojo.ChargeProjExample">
        delete from hosp_chargeProj
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.murphy.pojo.ChargeProj">
        insert into hosp_chargeProj (charP_id, charP_name, charP_money, charP_createTime, charP_state)
        values (#{charP_id,jdbcType=INTEGER}, #{charP_name,jdbcType=VARCHAR}, #{charP_money,jdbcType=DECIMAL},
                #{charP_createTime,jdbcType=TIMESTAMP}, #{charP_state,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.murphy.pojo.ChargeProj">
        insert into hosp_chargeProj
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="charP_id != null">
                charP_id,
            </if>
            <if test="charP_name != null">
                charP_name,
            </if>
            <if test="charP_money != null">
                charP_money,
            </if>
            <if test="charP_createTime != null">
                charP_createTime,
            </if>
            <if test="charP_state != null">
                charP_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="charP_id != null">
                #{charP_id,jdbcType=INTEGER},
            </if>
            <if test="charP_name != null">
                #{charP_name,jdbcType=VARCHAR},
            </if>
            <if test="charP_money != null">
                #{charP_money,jdbcType=DECIMAL},
            </if>
            <if test="charP_createTime != null">
                #{charP_createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="charP_state != null">
                #{charP_state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.murphy.pojo.ChargeProjExample" resultType="java.lang.Long">
        select count(*) from hosp_chargeProj
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update hosp_chargeProj
        <set>
            <if test="record.charP_id != null">
                charP_id = #{record.charP_id,jdbcType=INTEGER},
            </if>
            <if test="record.charP_name != null">
                charP_name = #{record.charP_name,jdbcType=VARCHAR},
            </if>
            <if test="record.charP_money != null">
                charP_money = #{record.charP_money,jdbcType=DECIMAL},
            </if>
            <if test="record.charP_createTime != null">
                charP_createTime = #{record.charP_createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.charP_state != null">
                charP_state = #{record.charP_state,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update hosp_chargeProj
        set charP_id = #{record.charP_id,jdbcType=INTEGER},
        charP_name = #{record.charP_name,jdbcType=VARCHAR},
        charP_money = #{record.charP_money,jdbcType=DECIMAL},
        charP_createTime = #{record.charP_createTime,jdbcType=TIMESTAMP},
        charP_state = #{record.charP_state,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.murphy.pojo.ChargeProj">
        update hosp_chargeProj
        <set>
            <if test="charP_name != null">
                charP_name = #{charP_name},
            </if>
            <if test="charP_money != null">
                charP_money = #{charP_money},
            </if>
            <if test="charP_createTime != null">
                charP_createTime = #{charP_createTime},
            </if>
            <if test="charP_state != null">
                charP_state = #{charP_state},
            </if>
        </set>
        where charP_id = #{charP_id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.murphy.pojo.ChargeProj">
        update hosp_chargeProj
        set charP_name  = #{charP_name,jdbcType=VARCHAR},
            charP_money = #{charP_money,jdbcType=DECIMAL},
            charP_createTime = #{charP_createTime,jdbcType=TIMESTAMP},
            charP_state = #{charP_state,jdbcType=INTEGER}
        where charP_id = #{charP_id,jdbcType=INTEGER}
    </update>

    <select id="queryByVo" parameterType="com.murphy.vo.query.QueryChargeProjVo" resultMap="BaseResultMap">
        select * from SSM_Hosp.hosp_chargeProj
        <where>
            <if test="charP_id != null">charP_id = #{charP_id}</if>
            <if test="charP_name != null">and charP_name like concat(concat('%',#{charP_name},'%'))</if>
        </where>
    </select>

    <select id="queryChargeProjName" resultMap="BaseResultMap">
        select charP_name,charP_money from SSM_Hosp.hosp_chargeProj
    </select>

    <select id="queryByName" resultMap="BaseResultMap">
        select * from SSM_Hosp.hosp_chargeProj where charP_name = #{charP_name}
    </select>
</mapper>